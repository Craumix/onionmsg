on: [workflow_dispatch]
name: Release
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch dependencies
      run: go get -d ./...
    - name: Build Releases
      run: |
        export MODULENAME=$(head -n 1 go.mod |  cut -d' ' -f2)
        export COMMIT_FLAG="-X '$MODULENAME/internal/daemon.LastCommit=$(git rev-list -1 HEAD | head -c 7)'"
        export BUILDVER_FLAG="-X '$MODULENAME/internal/daemon.BuildVer=$(go version)'"
        export VARFLAGS="-s -w $COMMIT_FLAG $BUILDVER_FLAG"
        GOOS=linux go build -ldflags="$VARFLAGS" -o onionmsgd-latest-linux ./cmd/onionmsgd
        GOOS=darwin go build -ldflags="$VARFLAGS" -o onionmsgd-latest-darwin ./cmd/onionmsgd
        GOOS=windows go build -ldflags="$VARFLAGS" -o onionmsgd-latest-windows.exe ./cmd/onionmsgd
        GOOS=windows go build -ldflags="$VARFLAGS -H=windowsgui" -o onionmsgd-latest-windows-nogui.exe ./cmd/onionmsgd
    - name: Run UPX
      uses: crazy-max/ghaction-upx@v1
      with:
        version: latest
        files: |
          ./onionmsgd*
        args: -fq --best
    - name: Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          ./LICENSE
          ./onionmsgd*
